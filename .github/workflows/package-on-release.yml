name: Create new release on successful merge into main

on:
  workflow_dispatch:
  pull_request:
    types: [ closed ]
    branches: [ main ]

jobs:
  compile-submod:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    env:
      SDL_AUDIODRIVER: dummy

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
            lfs: true

      - name: Load environment variables from file
        run: .github/scripts/load-env.sh

      - name: Restore DDLC/MAS and Ren'Py SDK cache
        id: cache
        uses: actions/cache@v3
        with:
          key: toolchain-r${{ env.RENPY_RELEASE }}-m${{ env.MAS_RELEASE }}-d${{ env.DDLC_RELEASE }}
          path: |
            build/ddlc
            build/renpy

      - name: Download DDLC/MAS package
        if: '!steps.cache.outputs.cache-hit'
        env:
          DL_CREDENTIALS: ${{ secrets.DL_CREDENTIALS }}
        run: .github/scripts/fetch-ddlc-mas.sh

      - name: Download Ren'Py SDK
        if: '!steps.cache.outputs.cache-hit'
        run: .github/scripts/fetch-renpy-sdk.sh

      - name: Store submod version in an environment variable
        run: echo "VERSION=$(.github/scripts/extract-version.sh)" >> $GITHUB_ENV

      - name: Compile submod
        run: .github/scripts/compile-submod.sh

      - name: Package submod
        run: (cd build/out; find game | zip "msh-mod-$VERSION.zip" -9 -@)

      - name: Package spritepacks
        run: .github/scripts/package-spritepacks.sh

      - name: Create new release draft
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          draft: true
          files: |
            build/out/msh-mod-${{ env.VERSION }}.zip
            build/out/spritepacks-${{ env.VERSION }}.zip
